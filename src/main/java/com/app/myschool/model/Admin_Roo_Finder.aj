// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.app.myschool.model;

import com.app.myschool.model.Admin;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Admin_Roo_Finder {
    
    public static Long Admin.countFindAdminsByUserNameEquals(String userName) {
        if (userName == null || userName.length() == 0) throw new IllegalArgumentException("The userName argument is required");
        EntityManager em = Admin.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Admin AS o WHERE o.userName = :userName", Long.class);
        q.setParameter("userName", userName);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Admin> Admin.findAdminsByUserNameEquals(String userName) {
        if (userName == null || userName.length() == 0) throw new IllegalArgumentException("The userName argument is required");
        EntityManager em = Admin.entityManager();
        TypedQuery<Admin> q = em.createQuery("SELECT o FROM Admin AS o WHERE o.userName = :userName", Admin.class);
        q.setParameter("userName", userName);
        return q;
    }
    
    public static TypedQuery<Admin> Admin.findAdminsByUserNameEquals(String userName, String sortFieldName, String sortOrder) {
        if (userName == null || userName.length() == 0) throw new IllegalArgumentException("The userName argument is required");
        EntityManager em = Admin.entityManager();
        String jpaQuery = "SELECT o FROM Admin AS o WHERE o.userName = :userName";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        TypedQuery<Admin> q = em.createQuery(jpaQuery, Admin.class);
        q.setParameter("userName", userName);
        return q;
    }
    
}
