/*
 * File: app/view/SubjectSaveTool.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MySchool.view.SubjectSaveTool', {
    extend: 'Ext.panel.Tool',
    alias: 'widget.subjectsavetool',

    id: 'subjectsavetoolid',
    itemId: 'configtoolsubjectsaveid',
    tooltip: 'Save',
    type: 'save',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            listeners: {
                click: {
                    fn: me.onSubjectsavetoolidClick,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onSubjectsavetoolidClick: function(tool, e, eOpts) {
        //window.console.log( "Save..." );
        //debugger;
        var gpnl = this.up('subjectspanel').down('subjectsgridpanel');
        var form = this.up( 'subjectspanel' ).down( 'subjectsform' );
        var mystore = gpnl.getStore();

        var records = mystore.getModifiedRecords();
        for( var i = 0; i < records.length; i++ )
        {
            records[i].set( 'lastUpdated', new Date() );
            var formValues = form.getValues();
        }

        mystore.sync();
        mystore.commmitChanges();

        // Last but not least, I can do this (Approach #3)
        //Ext.app.Application.fireEvent("saveSubjects", tool );

    }

});