/*
 * File: app/view/monthly/summary/DetailsTabPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MySchool.view.monthly.summary.DetailsTabPanel', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.monthlysummarydetailstabpanel',

    requires: [
        'MySchool.view.monthly.summary.FeelingTabPanel',
        'MySchool.view.monthly.summary.ReflectionsTabPanel',
        'MySchool.view.monthly.summary.PatternsOfCorrectonsTabPanel',
        'MySchool.view.monthly.summary.EffectivenessOfActionsTabPanel',
        'MySchool.view.monthly.summary.ActionResultsTabPanel',
        'MySchool.view.monthly.summary.ReflectionTabPanel',
        'MySchool.view.monthly.summary.PlannedChangesTabPanel',
        'MySchool.view.monthly.summary.CommentsTabPanel',
        'Ext.panel.Panel',
        'Ext.tab.Tab'
    ],

    height: 300,
    itemId: 'monthlysummarydetailstabpanel',
    minHeight: 300,
    width: 1398,
    activeTab: 0,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'monthlyfeelingstabpanel',
                    listeners: {
                        blur: {
                            fn: me.onMonthlyfeelingstabpanelBlur,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'monthlyrelectionstabpanel'
                },
                {
                    xtype: 'monthlypatternsofcorrectionstabpanel'
                },
                {
                    xtype: 'monthlyeffectivenessofactionstabpanel'
                },
                {
                    xtype: 'monthlyactionresultstabpanel'
                },
                {
                    xtype: 'monthlyreflectionstabpanel'
                },
                {
                    xtype: 'monthlyplannedchangestabpanel'
                },
                {
                    xtype: 'monthlycommentstabpanel'
                }
            ]
        });

        me.callParent(arguments);
    },

    onMonthlyfeelingstabpanelBlur: function(component, e, eOpts) {
        console.log('onMonthlyfeellingstabpanelBlur');
    }

});