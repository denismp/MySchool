/*
 * File: app/controller/monthly/SummaryRatingsController.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MySchool.controller.monthly.SummaryRatingsController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.monthlysummaryratingscontroller',

    models: [
        'monthly.SummaryRatings'
    ],
    stores: [
        'monthly.SummaryRatingsStore'
    ],

    refs: [
        {
            ref: 'MonthlyDetailsTabPanel',
            selector: 'monthlydetailstabpanel'
        },
        {
            ref: 'MonthlyFeeliingsTabPanel',
            selector: 'monthlyfeelingstabpanel'
        },
        {
            ref: 'MonthlyReflectionTabPanel',
            selector: 'monthlyreflectiontabpanel'
        },
        {
            ref: 'MonthlyPatternsOfCorrectionsTabPanel',
            selector: 'monthlypatternsofcorrectionstabpanel'
        },
        {
            ref: 'MonthlyEffectivenessOfActionsTabPanel',
            selector: 'monthlyeffectivenessofactionstabpanel'
        },
        {
            ref: 'MonthlyActionsResultsTabPanel',
            selector: 'monthlyactionsresultstabpanel'
        },
        {
            ref: 'MonthlyRelizationsTabPanel',
            selector: 'monthlyrealizationstabpanel'
        },
        {
            ref: 'MonthlyPlannedChangesTabPanel',
            selector: 'monthlyplannedchangestabpanel'
        },
        {
            ref: 'MonthlyCommentsTabPanel',
            selector: 'monthlycommentstabpanel'
        }
    ],

    onMonthlysummarygridpanelSelectionChange: function(model, selected, eOpts) {

    },

    onMonthlysummarydetailspanelActivate: function(component, eOpts) {

    },

    onMonthlyfeelingstabpanelActivate: function(component, eOpts) {
        //debugger;
        console.log( "onMonthlyfeelingstabpanelActivate");
    },

    onMonthlysummarygridviewViewReady: function(dataview, eOpts) {

    },

    onFeelingstextboxBlur: function(component, e, eOpts) {
        this.blurHandler( component, e, this );
    },

    onEditmonthlyfeelingstabpanelClick: function(button, e, eOpts) {
        this.buttonHandler( button, e, eOpts );
    },

    blurHandler: function(o, event, eOpts) {
        debugger;
        var p_ = o.up('form').up('panel');
        var topP_ = p_.up('panel');
        var pItemId_ = p_.getItemId();
        var edit_ = p_.down('#edit' + pItemId_);

        Ext.Msg.show({
            title:'Save Changes?',
            msg: 'Would you like to save your changes to ' + pItemId_ + ' ?',
            buttons: Ext.Msg.YESNO,
            icon: Ext.Msg.QUESTION,
            fn: function(buttonId) {
                if (buttonId == 'yes') {
                    Ext.Msg.show({
                        title: 'Save',
                        msg: 'record saved',
                        buttons: Ext.Msg.OK,
                        icon: Ext.window.MessageBox.INFO
                    });
                }
                else {
                    Ext.Msg.show({
                        title: 'Cancel',
                        msg: 'record restored',
                        buttons: Ext.Msg.OK,
                        icon: Ext.window.MessageBox.INFO
                    });
                }
                topP_ = eOpts;
                //topP_.buttonHandler.call(edit_);
                topP_.buttonHandler(edit_);
            }
        });
    },

    buttonHandler: function(button, e, eOpts) {
        debugger;
        window.console.log(button);
        var b_ = button;
        var p_ = b_.up('panel');
        var pItemId_ = p_.getItemId();
        var field_;

        //if (pItemId_ == 'monthlyfeelingstabpanel') {
        //    field_ = p_.down('numberfield');
        //} else {
        //    field_ = p_.down('textareafield');
        //}
        field_ = p_.down('textareafield');

        if (b_.getText().charAt(0) == 'D') {
            b_ = p_.down('#edit' + pItemId_);
            b_.setText('Edit');
            b_.setDisabled(false);
            field_.setDisabled(true);
        } else {
            b_.setText('Done');
            field_.setDisabled(false);
            field_.focus();
        }
    },

    init: function(application) {
        this.control({
            "#monthlysummarygridpanel": {
                selectionchange: this.onMonthlysummarygridpanelSelectionChange
            },
            "#monthlysummarydetailspanel": {
                activate: this.onMonthlysummarydetailspanelActivate
            },
            "#monthlyfeelingstabpanel": {
                activate: this.onMonthlyfeelingstabpanelActivate
            },
            "#monthlysummarygridview": {
                viewready: this.onMonthlysummarygridviewViewReady
            },
            "#feelingstextbox": {
                blur: this.onFeelingstextboxBlur
            },
            "#editmonthlyfeelingstabpanel": {
                click: this.onEditmonthlyfeelingstabpanelClick
            }
        });
    }

});
