/*
 * File: app/controller/bodiesofwork/MyController.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MySchool.controller.bodiesofwork.MyController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.bodiesofworkcontroller',

    models: [
        'bodiesofwork.BodiesOfWorkModel'
    ],
    stores: [
        'bodiesofwork.MyJsonStore'
    ],
    views: [
        'bodiesofwork.BodyOfWorkForm',
        'bodiesofwork.GridPanel'
    ],

    refs: [
        {
            ref: 'BodyOfWorksForm',
            selector: 'bodyofworkform'
        }
    ],

    onBodiesofworkssubjectsgridViewReady: function(tablepanel, eOpts) {
        debugger;
        console.log('onBodiesofworkssubjectsgridViewReady()');
        var bws_ = Ext.getStore('bodiesofwork.MyJsonStore');
        var ss_ = Ext.getStore('student.StudentStore');
        var r_ = ss_.getAt(0);
        //        debugger
        if ( typeof( r_ ) != "undefined" ) {
            var studentName_ = r_.get('firstName') + " " + r_.get('middleName') + ' ' + r_.get('lastName');
            var g_ = Ext.ComponentQuery.query("#bodiesofworkssubjectsgrid")[0];
            g_.setTitle('[' + studentName_ + '] Bodies Of Work');
            bws_.load({
                callback: this.onMyJsonStoreLoad,
                scope: this,
                params: {
                    studentName: r_.get('userName'),
                    studentId: r_.get('id')
                }
            });
        }
        //grid.getSelectionModel().select( 0 );
        //tablepanel.getSelectionModel().select( 0 );

    },

    onBodiesofworkssubjectsgridSelectionChange: function(model, selected, eOpts) {
        debugger;
        // in the onMyJsonStoreLoad we do a deselect so we need to test
        // if selected[0] has a value
        if ( Ext.isDefined( selected  ) && Ext.isDefined( selected[0]  )) {
            //var myFormView = this.getBodyOfWorksForm();
            this.getBodyOfWorksForm().getForm().loadRecord( selected[0] );
            console.log('onBodiesofworssubjectsgridSelectionChange()');
        }

    },

    onBodyofworkformBoxReady: function(component, width, height, eOpts) {
        debugger;
        console.log('onBodyofworkformBoxReady()');
    },

    onBodiesofworkstabActivate: function(component, eOpts) {
        // catch the tab activate but only reload if we have processed
        // the viewready indicated by this.gridViewReady
        console.log('#bodiesofworkstab.activate()');

        if ( Ext.isDefined( this.gridViewReady  ) ) {
            var g_ = Ext.ComponentQuery.query("#bodiesofworkssubjectsgrid")[0];

            g_.getStore().reload();
        }

    },

    onToolrefreshbodiesofworkClick: function(tool, e, eOpts) {

    },

    onToolsearchbodiesofworkClick: function(tool, e, eOpts) {

    },

    onToolnewbodiesofworkClick: function(tool, e, eOpts) {

    },

    onToolsavebodiesofworkClick: function(tool, e, eOpts) {

    },

    onTooldeletebodiesofworkClick: function(tool, e, eOpts) {

    },

    onToollockbodiesofworkClick: function(tool, e, eOpts) {

    },

    init: function(application) {
        this.control({
            "#bodiesofworkssubjectsgrid": {
                viewready: this.onBodiesofworkssubjectsgridViewReady,
                selectionchange: this.onBodiesofworkssubjectsgridSelectionChange
            },
            "#bodyofworkform": {
                boxready: this.onBodyofworkformBoxReady
            },
            "#bodiesofworkstab": {
                activate: this.onBodiesofworkstabActivate
            },
            "#toolrefreshbodiesofwork": {
                click: this.onToolrefreshbodiesofworkClick
            },
            "#toolsearchbodiesofwork": {
                click: this.onToolsearchbodiesofworkClick
            },
            "#toolnewbodiesofwork": {
                click: this.onToolnewbodiesofworkClick
            },
            "#toolsavebodiesofwork": {
                click: this.onToolsavebodiesofworkClick
            },
            "#tooldeletebodiesofwork": {
                click: this.onTooldeletebodiesofworkClick
            },
            "#toollockbodiesofwork": {
                click: this.onToollockbodiesofworkClick
            }
        });
    },

    onMyJsonStoreLoad: function() {
        //debugger;
        var g_ = Ext.ComponentQuery.query("#bodiesofworkssubjectsgrid")[0];

        if (g_.getStore().getCount() > 0) {
            g_.getSelectionModel().deselectAll();
            g_.getSelectionModel().select( 0 );
        }

        this.gridViewReady = true;

    }

});
