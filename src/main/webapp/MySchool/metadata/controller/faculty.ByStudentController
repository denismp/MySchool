{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "facultybystudentcontroller",
        "designer|userClassName": "faculty.ByStudentController",
        "models": [
            "monthly.EvaluationRatings"
        ],
        "stores": [
            "monthly.EvaluationRatingsStore"
        ]
    },
    "designerId": "f67c8368-e7ee-4d7c-949b-84a33169b9ad",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "FacultyByStudentGridPanel",
                "selector": "#facultyprofilesbystudentgridpanel"
            },
            "designerId": "cb28f2ed-2112-4629-afa1-211721c0d3f0"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "FacultyByStudentForm",
                "selector": "#facultyprofileform"
            },
            "designerId": "599294f2-ce10-4ee4-8b71-d6a0b6fb352c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "button, e, eOpts"
                ],
                "fn": "buttonHandler",
                "implHandler": [
                    "debugger;",
                    "window.console.log(button);",
                    "var b_\t\t= button;",
                    "var form\t= b_.up('panel');",
                    "var p_\t\t= form.up();",
                    "var pItemId_ = p_.getItemId();",
                    "var field_;",
                    "",
                    "if (pItemId_ == 'dailyhourstab') {",
                    "    field_ = p_.down('numberfield');",
                    "} else {",
                    "    field_ = p_.down('textareafield');",
                    "}",
                    "",
                    "if (b_.getText().charAt(0) == 'D') {",
                    "    b_ = p_.down('#edit' + pItemId_);",
                    "    b_.setText('Edit');",
                    "    b_.setDisabled(false);",
                    "    field_.setDisabled(true);",
                    "} else {",
                    "    b_.setText('Done');",
                    "    field_.setDisabled(false);",
                    "    field_.focus();",
                    "}"
                ]
            },
            "designerId": "02a91a97-0b75-420d-a65a-b2d2167f0e8e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "o",
                    "event",
                    "eOpts"
                ],
                "fn": "blurHandler",
                "implHandler": [
                    "debugger;",
                    "var p_\t\t\t= o.up('form').up('panel');",
                    "//var myForm\t\t= o.up('form');",
                    "var myForm\t\t= this.getFacultyByStudentForm();",
                    "//var topP_\t\t= p_.up('panel');",
                    "var pItemId_\t= p_.getItemId();",
                    "var edit_\t\t= p_.down('#edit' + pItemId_);",
                    "var myTitle\t\t= p_.title;",
                    "console.log( edit_ );",
                    "//console.log( topP_ );",
                    "console.log( myForm );",
                    "console.log( \"pItemId_=\" + pItemId_);",
                    "//var myController = this;",
                    "",
                    "console.log( 'title=' + myTitle );",
                    "",
                    "//topP_.buttonHandler(edit_);",
                    "",
                    "Ext.Msg.show({",
                    "    title:'Save Changes?',",
                    "    //msg: 'Would you like to save your changes to ' + pItemId_ + ' ?',",
                    "    msg: 'Would you like to save your changes to ' + myTitle + ' ?',",
                    "    buttons: Ext.Msg.YESNO,",
                    "    icon: Ext.Msg.QUESTION,",
                    "    fn: function(buttonId) {",
                    "        var mystore\t\t= Ext.getStore(\"faculty.ByStudentStore\");",
                    "        if (buttonId == 'yes') {",
                    "            Ext.Msg.show({",
                    "                title: 'Save',",
                    "                msg: 'record saved',",
                    "                buttons: Ext.Msg.OK,",
                    "                icon: Ext.window.MessageBox.INFO",
                    "            });",
                    "            //debugger;",
                    "",
                    "            var myTextArea\t= myForm.down('textareafield');",
                    "            var myName\t\t= myTextArea.getName();",
                    "            var myValue\t\t= myTextArea.getValue();",
                    "            var record\t\t= myForm.getRecord();",
                    "            record.set( myName, myValue );",
                    "            record.set( 'lastUpdated', new Date() );",
                    "            record.set( 'whoUpdated', 'login' );",
                    "",
                    "            mystore.sync();",
                    "        }",
                    "        else {",
                    "            Ext.Msg.show({",
                    "                title: 'Cancel',",
                    "                msg: 'record restored',",
                    "                buttons: Ext.Msg.OK,",
                    "                icon: Ext.window.MessageBox.INFO",
                    "            });",
                    "            mystore.reload();",
                    "        }",
                    "",
                    "    }",
                    "});",
                    "//debugger;",
                    "this.buttonHandler( edit_ );"
                ]
            },
            "designerId": "951e7d5c-3249-48f4-8ab0-bdb4bf837ab3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "tabPanel",
                    "selected",
                    "fieldname"
                ],
                "fn": "loadTabPanelForm",
                "implHandler": [
                    "debugger;",
                    "var dockedItems = tabPanel.getDockedItems();",
                    "var myForm = dockedItems[0];",
                    "",
                    "if( Ext.isDefined( myForm ) )",
                    "{",
                    "    console.log( myForm );",
                    "    //var textBox = myForm.dockedItems.items[0];",
                    "    var textBox = myForm.down('textareafield');",
                    "    textBox.name = fieldname;",
                    "    myForm.loadRecord( selected[0] );",
                    "}",
                    "else",
                    "{",
                    "    console.log( 'loadTabPanelForm(): No form' );",
                    "    //console.log( tabPanel );",
                    "}"
                ]
            },
            "designerId": "d11a1acd-bbcb-4140-ae6a-dbe69113191a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onMyJsonStoreLoad",
                "implHandler": [
                    "//debugger;",
                    "//var g_ = Ext.ComponentQuery.query(\"#monthlysummarygridpanel\")[0];",
                    "var g_ = this.getFacultyByStudentGridPanel();",
                    "",
                    "if (g_.getStore().getCount() > 0) {",
                    "    g_.getSelectionModel().deselectAll();",
                    "    g_.getSelectionModel().select( 0 );",
                    "}",
                    "",
                    "this.gridViewReady = true;"
                ]
            },
            "designerId": "af7a3cff-505e-4921-8a72-e5a93ca8121c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newfacultybystudentcanel",
                "designer|targetType": "Ext.button.Button",
                "fn": "onNewfacultybystudentcanelClick",
                "implHandler": [
                    "//debugger;",
                    "window.console.log( \"Cancel New Monthly Evaluation\" );",
                    "var myForm = button.up().getForm();",
                    "myForm.reset();",
                    "button.up().hide();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "ceeb5ad7-be8d-44f9-998e-643d8d3cf522"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newfacultybystudentsubmit",
                "designer|targetType": "Ext.button.Button",
                "fn": "onNewfacultybystudentsubmitClick",
                "implHandler": [
                    "debugger;",
                    "window.console.log( \"Submit New Monthly Evaluations\" );",
                    "var myForm\t\t\t\t\t= button.up().getForm();",
                    "//var newDialog = button.up('monthlynewsummaryformpanel');",
                    "",
                    "//Get the values from the form and insert a new record into the MonthlySummaryView.",
                    "",
                    "var formValues\t\t\t\t= myForm.getValues();",
                    "",
                    "//\tCreate an empty record",
                    "var myRecord\t= Ext.create('MySchool.model.monthly.EvaluationRatings');",
                    "",
                    "//\tGet the stores that we will need",
                    "var myStore\t\t= this.getStore( 'monthly.EvaluationRatingsStore' );",
                    "",
                    "var studentStore = Ext.getStore('student.StudentStore');",
                    "var subjectStore = Ext.getStore( 'subject.SubjectStore' );",
                    "",
                    "//\tGet the student info",
                    "var studentRecord\t= studentStore.getAt(0);",
                    "var studentId\t\t= studentRecord.get( 'id' );",
                    "var studentName\t\t= studentRecord.get( 'userName' );",
                    "",
                    "//\tGet the quarterSubject record from the form.",
                    "var quarterSubjectId\t\t= formValues.comboquartersubject;",
                    "var quarterSubjectRecord;",
                    "for( var i = 0; i < subjectStore.count(); i++ )",
                    "{",
                    "    if( subjectStore.getAt(i).get('id') === quarterSubjectId )",
                    "    {",
                    "        quarterSubjectRecord = subjectStore.getAt(i);",
                    "        break;",
                    "    }",
                    "}",
                    "",
                    "if( typeof quarterSubjectRecord !== 'undefined')",
                    "{",
                    "    //\tGet the other information that we need for the new record.",
                    "    var subjName\t= quarterSubjectRecord.get('subjName');",
                    "    var subjId\t\t= quarterSubjectRecord.get('subjId');",
                    "    var qtrName\t\t= quarterSubjectRecord.get('qtrName');",
                    "    var qtrId\t\t= quarterSubjectRecord.get('qtrId');",
                    "    var qtrYear\t\t= quarterSubjectRecord.get('qtrYear');",
                    "    //var month_number = formValues.combomonth;",
                    "",
                    "    //var allSubjRec_ = myAllSubjStore.findRecord( 'subjName', subjName );",
                    "    //var subjId_ = allSubjRec_.get( 'subjId' );",
                    "",
                    "",
                    "    //Add the data to the new record.",
                    "    if( formValues.combomonth > 0 )",
                    "    {",
                    "        myRecord.set('month_number', formValues.combomonth);",
                    "        //myRecord.set('week_number', formValues.week_number);",
                    "",
                    "        myRecord.set('subjName', subjName );",
                    "        myRecord.set('subjId', subjId );",
                    "        myRecord.set('qtrName', qtrName );",
                    "        myRecord.set('qtrId', qtrId);",
                    "        myRecord.set('studentId', studentId);",
                    "        myRecord.set('studentUserName', studentName);",
                    "        myRecord.set('qtrYear', qtrYear);",
                    "",
                    "        myRecord.set('locked', 0 );",
                    "        myRecord.set('levelOfDifficulty', formValues.levelOfDifficulty);",
                    "        myRecord.set('criticalThinkingSkills', formValues.criticalThinkingSkills);",
                    "        myRecord.set('effectiveCorrectionActions', formValues.effectiveCorrectionActions);",
                    "        myRecord.set('completingCourseObjectives', formValues.completingCourseObjectives);",
                    "        myRecord.set('accuratelyIdCorrections', formValues.accuratelyIdCorrections);",
                    "        myRecord.set('thoughtfulnessOfReflections', formValues.thoughtfulnessOfReflections);",
                    "        myRecord.set('workingEffectivelyWithAdvisor', formValues.workingEffectivelyWithAdvisor);",
                    "        myRecord.set('responsibilityOfProgress', formValues.responsibilityOfProgress);",
                    "        myRecord.set('comments', formValues.comments);",
                    "",
                    "        myRecord.set('whoUpdated', 'login');",
                    "        myRecord.set('lastUpdated', new Date());",
                    "        myRecord.set('version', null);",
                    "        myRecord.set('monthlyevaluationId', 0 );",
                    "",
                    "        //add to the store",
                    "",
                    "        myStore.add( myRecord );",
                    "",
                    "        //sync the store.",
                    "        myStore.sync();",
                    "",
                    "        myForm.reset();",
                    "        button.up().hide();",
                    "    }",
                    "    else",
                    "    {",
                    "        var smsg = \"You must enter a value for month\";",
                    "        Ext.MessageBox.show({",
                    "            title: 'REMOTE EXCEPTION',",
                    "            msg: smsg,",
                    "            icon: Ext.MessageBox.ERROR,",
                    "            buttons: Ext.Msg.OK",
                    "        });",
                    "    }",
                    "}",
                    "else",
                    "{",
                    "    var msg = \"You must have student/faculty/subject/quarter records.\";",
                    "            Ext.MessageBox.show({",
                    "            title: 'NO DATA',",
                    "            msg: smsg,",
                    "            icon: Ext.MessageBox.ERROR,",
                    "            buttons: Ext.Msg.OK",
                    "        });",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "44e9079d-4f57-427e-b1b6-1280759398b6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#facultyprofilerefreshtool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onFacultyprofilerefreshtoolClick",
                "implHandler": [
                    "var myStore = Ext.getStore('faculty.ByStudentStore');",
                    "myStore.reload();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "5b00eb09-eb0a-46a4-968a-39034ac5a533"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#facultyprofilesearchtool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onFacultyprofilesearchtoolClick",
                "implHandler": [
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "4e6e9649-b507-430b-8f0d-c22f9db192d6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#facultyprofilenewtool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onFacultyprofilenewtoolClick",
                "implHandler": [
                    "debugger;",
                    "var studentStore\t\t\t\t= Ext.getStore('student.StudentStore');",
                    "var subjectStore\t\t\t\t= Ext.getStore('subject.SubjectStore');",
                    "var commonQuarterSubjectStore\t= Ext.getStore( 'common.QuarterSubjectStore');",
                    "var commonMonthStore\t\t\t= Ext.getStore('common.MonthStore');",
                    "",
                    "var studentRecord\t= studentStore.getAt(0);",
                    "var studentId\t\t= studentRecord.get( 'id' );",
                    "var studentName\t\t= studentRecord.get( 'userName' );",
                    "",
                    "var newDialog = Ext.create( 'MySchool.view.faculty.NewFormPanel' );",
                    "",
                    "newDialog.down('#studentid').setValue( studentId );",
                    "newDialog.down('#studentname').setValue( studentName );",
                    "",
                    "//commonQuarterSubjectStore.myLoad();",
                    "commonMonthStore.myLoad();",
                    "",
                    "window.console.log( 'New Faculty By Student Dialog' );",
                    "",
                    "newDialog.render( Ext.getBody() );",
                    "newDialog.show();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "d8c665b8-9649-48f2-b40b-2c847778f927"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#facultyprofilesavetool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onFacultyprofilesavetoolClick",
                "implHandler": [
                    "window.console.log( \"faculty.ByStudentStore.Save\" );",
                    "debugger;",
                    "",
                    "var mystore = Ext.getStore(\"faculty.ByStudentStore\");",
                    "",
                    "var records = mystore.getModifiedRecords();",
                    "for( var i = 0; i < records.length; i++ )",
                    "{",
                    "    records[i].set( 'lastUpdated', new Date() );",
                    "    records[i].set( 'whoUpdated', 'login');",
                    "}",
                    "",
                    "mystore.sync();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "5af1c5ad-b150-48ed-b703-2c2f10742047"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#facultyprofiledeletetool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onFacultyprofiledeletetoolClick",
                "implHandler": [
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "651893ca-4b87-4240-b818-19003ddb0537"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#facultyprofilelocktool",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onFacultyprofilelocktoolClick",
                "implHandler": [
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "c4f6c455-f141-4fa7-8c64-ff9ac8dcdc3a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#facultyprofilesbystudentgridpanel",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onFacultyprofilesbystudentgridpanelViewReady",
                "implHandler": [
                    "debugger;",
                    "console.log('onFacultyprofilesbystudnegridpanelViewReady()');",
                    "var myStore = Ext.getStore('faculty.ByStudentStore');",
                    "var myStudentStore = Ext.getStore('student.StudentStore');",
                    "var studentRecord = myStudentStore.getAt(0);",
                    "//        debugger",
                    "if ( typeof( studentRecord ) != \"undefined\" ) {",
                    "    var studentName_ = studentRecord.get('firstName') + \" \" + studentRecord.get('middleName') + ' ' + studentRecord.get('lastName');",
                    "    //MonthlyDetailsGridPanel",
                    "    //var myGrid = Ext.ComponentQuery.query(\"#bodiesofworkssubjectsgrid\")[0];",
                    "    var myGrid = this.getFacultyByStudentGridPanel();",
                    "",
                    "    myGrid.setTitle('[' + studentName_ + ']');",
                    "    myStore.load({",
                    "        callback: this.onMyJsonStoreLoad,",
                    "        scope: this,",
                    "        params: {",
                    "            studentName: studentRecord.get('userName'),",
                    "            studentId: studentRecord.get('id')",
                    "        }",
                    "    });",
                    "}",
                    "//grid.getSelectionModel().select( 0 );",
                    "//tablepanel.getSelectionModel().select( 0 );"
                ],
                "name": "viewready",
                "scope": "me"
            },
            "designerId": "04767755-9b94-476b-9eb3-98c3a51ee53f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#facultyprofilesbystudentgridpanel",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onFacultyprofilesbystudentgridpanelSelectionChange",
                "implHandler": [
                    "debugger;",
                    "// in the onMyJsonStoreLoad we do a deselect so we need to test",
                    "// if selected[0] has a value",
                    "if ( Ext.isDefined( selected  ) && Ext.isDefined( selected[0]  )) {",
                    "    //var tabPanel = this.getMonthlyCommentsTabPanel();",
                    "    //    console.log( tabPanel );",
                    "    //this.loadTabPanelForm( tabPanel, selected, 'comments' );",
                    "    //tabPanel = this.getDailyStudyDetailsTabPanel();",
                    "    //    console.log( tabPanel );",
                    "",
                    "    console.log('onFacultyprofielsbystudengridpanelSelectionChange()');",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "designerId": "c6e7285d-9bc5-459b-afc2-103fe68e66fc"
        }
    ]
}